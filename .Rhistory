A=SM.Rst.2.train
W=Matrix(0,dim(A)[2],dim(A)[2])
result<-data.frame(0,dim(A)[2],dim(A)[2])
dim(A)
res<-mapply(f.SLIM.main,4001:4191)
res[2,]
View(res[4,])
W<-mapply(cbind,res[1,])
dim(W)
image(W)
summary(W)
max(W)
res.W<-mapply(cbind,res[1,])
getwd(
)
write.csV(rew.W,"src/SLIM1_4001-4191.csv",row.names=F)
write.csv(rew.W,"src/SLIM1_4001-4191.csv",row.names=F)
write.csv(res.W,"src/SLIM1_4001-4191.csv",row.names=F)
sum(res.W)
sum(res[1,])
sum(res[1,][1])
sum(res[1,]$par)
sum(res[1,1]$par)
sum(res[1,1])
res[2,1]
res[1,1]
sum(res[1,1])
res[1,1]
res[1,1]$par
sum(res[1,1]$par)
sum(res[1,2]$par)
sum(res[1,3]$par)
sum(res[1,4]$par)
sum(res[1,5]$par)
sum(res[1,6]$par)
res.W[which(res.W!=0)]
for (i in 1:1e3) {
cat( i )
Sys.sleep(0.01)
cat("\014")
}
for (i in 1:1e3) {
cat( i )
Sys.sleep(0.01)
# cat("\014")
}
for (i in 1:10) {Sys.sleep(1); cat("\r",i)}
cat(i,":",p.end-p.start,"\r")
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-hjkb(rep(c(0,0,0),c(i-1,1,4191-i)),
f.SLIM,lower=rep(0,4191),
upper=rep(c(5,0,5),c(i-1,1,4191-i)),
control=list(tol=0.2,maxfeval=15000),
j=i,A=A)
p.end<-Sys.time()
print(i)
cat(i,":",p.end-p.start,"\r")
return(testW)
}
f.SLIM.main(1)
a<-f.SLIM.main(1)
a<-f.SLIM.main(2)
a<-mapply(f.SLIM.main,1:4)
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-hjkb(rep(c(0,0,0),c(i-1,1,4191-i)),
f.SLIM,lower=rep(0,4191),
upper=rep(c(5,0,5),c(i-1,1,4191-i)),
control=list(tol=0.2,maxfeval=15000),
j=i,A=A)
p.end<-Sys.time()
# print(i)
cat(i,":",p.end-p.start,"\r")
return(testW)
}
a<-mapply(f.SLIM.main,1:4)
a[1,]
a[2,]
a[3,]
a[4,]
View(mapply(cbind,res[1,]))
View(mapply(cbind,a[1,]))
summary(mapply(cbind,a[1,]))
mapply(cbind,a[1,])(which(mapply(cbind,a[1,])!=0))
mapply(cbind,a[1,])[which(mapply(cbind,a[1,])!=0)]
sum(a[1,])
sum(a[1,1]$par)
sum(a[1,2]$par)
sum(a[1,3]$par)
sum(a[1,4]$par)
?hjkb
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-hjkb(rep(c(0,0,0),c(i-1,1,4191-i)),
f.SLIM,lower=rep(0,4191),
upper=rep(c(5,0,5),c(i-1,1,4191-i)),
control=list(tol=1.e-1,maxfeval=15000),
j=i,A=A)
p.end<-Sys.time()
# print(i)
cat(i,":",p.end-p.start,"\r")
return(testW)
}
a<-mapply(f.SLIM.main,1:4)
load("E:/8sem/thesis/src/清爽.RData")
library(NMF)
View(f.sim.item)
data(esGolub)
esGolub<-esGolub[1:200,]
library(dplyr)
UR.Rst.2.test<-filter(UR.Rst.2,date>quantile.8.2)
UR.Rst.2.train<-filter(UR.Rst.2,date<=quantile.8.2)
SM.Rst.2.test<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.test<-as(SM.Rst.2.test,"dgCMatrix")
SM.Rst.2.train<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.train<-as(SM.Rst.2.train,"dgCMatrix")
SM.Rst.2.test<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
library(recommenderlab)
library(dplyr)
library(NMF)
library(recommenderlab)
library(dfoptim)
SM.Rst.2.test<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.test<-as(SM.Rst.2.test,"dgCMatrix")
SM.Rst.2.train<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.train<-as(SM.Rst.2.train,"dgCMatrix")
data(esGolub)
esGolub<-esGolub[1:200,]
nmf.UPOI<-nmf(as.matrix(SM.Rst.2.train),10,.opt="vP6")
View(coef(nmf.UPOI))
View(bias(nmf.UPOI))
View(basis(nmf.UPOI))
nmfAlgorithm()
?nmf
nmf.UPOI<-nmf(as.matrix(SM.Rst.2.train),100,method="snmf/r",.opt="vP6")
library(optimx)
library(NMF)
library(recommenderlab)
load("E:/8sem/thesis/src/清爽.RData")
library(dplyr)
library(NMF)
library(recommenderlab)
library(dfoptim)
UR.Rst.2.test<-filter(UR.Rst.2,date>quantile.8.2)
UR.Rst.2.train<-filter(UR.Rst.2,date<=quantile.8.2)
# UR.Rst.2.train<-group_by(UR.Rst.2.train,user_id)%>%
#   mutate(quantile=as.Date(quantile(as.numeric(date),.75),origin = "1970-01-01"))
# UR.Rst.2.valid<-filter(UR.Rst.2.train,date>quantile)
# UR.Rst.2.train<-filter(UR.Rst.2.train,date<=quantile)
SM.Rst.2.test<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.test<-as(SM.Rst.2.test,"dgCMatrix")
SM.Rst.2.train<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.train<-as(SM.Rst.2.train,"dgCMatrix")
nmfAlgorithm()
nmf.snmfr50<-nmf(as.matrix(SM.Rst.2.train),50,.opt="vP6")
nmf.snmfr50<-nmf(as.matrix(SM.Rst.2.train),50,method="snmf/r",.opt="vP6")
nmf.snmfl50<-nmf(as.matrix(SM.Rst.2.train),50,method="snmf/l",.opt="vP6")
nmf.snmfl50<-nmf(SM.Rst.2.train,50,method="snmf/l",.opt="vP6")
nmf.snmfl50<-nmf(as.matrix(SM.Rst.2.train),50,method="offset",.opt="vP6")
save.image("E:/8sem/thesis/src/0526 trained nmf50.RData")
coef(nmf.snmfl50)[1,]
View(coef(nmf.snmfl50))
summary(coef(nmf.snmfl50))
coef(nmf.snmfl50)[,1]*basis(nmf.snmfl50)[,1]
basis(nmf.snmfl50)[1,]*coef(nmf.snmfl50)[,1]
load("E:/8sem/thesis/src/0526 trained nmf50.RData")
library(NMF)
load("E:/8sem/thesis/src/0526 trained nmf50.RData")
View(UR.Rst.2.train)
library(data.table)
library(dplyr)
names(UR.Rst.2.train)
UR.Rst.2.train<-mutate(UR.Rst.2.train,starnew<-stars*0.5/as.numeric(log(quantile.8.2-date)))
UR.Rst.2.train<-mutate(UR.Rst.2.train,starnew<-stars*0.5/log(as.numeric(quantile.8.2-date)))
summary(UR.Rst.2.train)
UR.Rst.2.train<-mutate(UR.Rst.2.train,starnew<-stars*0.5/log(as.numeric(quantile.8.2-date+1)))
load("E:/8sem/thesis/src/0526 trained nmf50.RData")
library(dplyr)
library(data.table)
UR.Rst.2.train.temporal<-mutate(UR.Rst.2.train,0.5*exp(stars)/log(quantile.8.2-date+1))
UR.Rst.2.train.temporal<-mutate(UR.Rst.2.train,0.5*exp(stars)/log(as.numeric(quantile.8.2-date+1)))
names(UR.Rst.2.train.temporal)
names(UR.Rst.2.train.temporal)[9]
names(UR.Rst.2.train.temporal)[9]<-"newstar"
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),"realRatingMatrix")
SM.temporal.train<-as(as.matrix(select(UR.Rst.2.train.temporal,user_id,business_id,newstar)),
"realRatingMatrix")
library(NMF)
library(recommenderlab)
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
SM.temporal.train<-as(SM.temporal.train,"dgCMatrix")
SM.temporal.train[SM.temporal.train!=0]
UR.Rst.2.train.temporal<-mutate(UR.Rst.2.train,0.5*exp(stars)/log(as.numeric(quantile.8.2-date+2)))
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
names(UR.Rst.2.train.temporal)[9]<-"newstar"
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
SM.temporal.train<-as(SM.temporal.train,"dgCMatrix")
?scale
SM.temporal.train<-scale(SM.temporal.train, center=T,scale=T)
head(SM.temporal.train)
SM.temporal.train[SM.temporal.train!=0]
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
SM.temporal.train<-as(SM.temporal.train,"dgCMatrix")
SM.temporal.train<-scale(SM.temporal.train, center=T,scale=T)
SM.temporal.train<-scale(SM.temporal.train,scale=T)
SM.temporal.train[SM.temporal.train!=0]
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
SM.temporal.train<-as(SM.temporal.train,"dgCMatrix")
SM.temporal.train<-scale(SM.temporal.train,center=F,scale=T)
scale(c(1,4,2,0,0,0),center=F,scale=T)
SM.temporal.train[SM.temporal.train!=0]
scale(c(1,2,3,0,4,2,1,2,0,0),center=F,scale=T)
SM.temporal.train<-as(select(UR.Rst.2.train.temporal,user_id,business_id,newstar),
"realRatingMatrix")
SM.temporal.train<-as(SM.temporal.train,"dgCMatrix")
min(SM.temporal.train)
max(SM.temporal.train)
summary(max(SM.temporal.train))
summary(SM.temporal.train)
View(scale)
SM.temporal.train<-scale(SM.temporal.train,center=F,scale=T)[,]
SM.temporal.train[SM.temporal.train!=0]
SM.temporal.train[SM.temporal.train==0]
#
# f.SLIM<-function(wi){
#   f=0.5*norm2(ai-A%*%wi)^2+
#     0.5/2*norm2(wi)^2+
#     0.5*norm1(wi)
#   return(f)
# }
f.SLIM<-function(wi,j,A,beta=5,lambda=0.5){
f=0.5*norm2(A[,j]-A%*%wi)^2+
beta/2*norm2(wi)^2+
lambda*norm1(wi)
return(f)
}
# f.SLIM.main<-function(i){
#   p.start<-Sys.time()
#   test.ga<-ga(type="real-valued",fitness = f.SLIM,
#               j=i,A=A,
#               min=rep(0,4191),
#               max=rep(c(5,0,5),c(i-1,1,4191-i)),
#               nBits=64)
#   p.end<-Sys.time()
#   print(i)
#   print(p.end-p.start)
#   plot(test)
#   return(test)
# }
#
# f.SLIM.main<-function(i){
#   p.start<-Sys.time()
#   testW<-optim(W[,i],
#               f.SLIM,
#               method="L-BFGS-B",
#               lower=0,upper=5,
#               control=list(
#                 tol=0.1,
#                 maxfeval=15000
#                 ),
#               j=i,A=A)
#   p.end<-Sys.time()
#   # print(i)
#   cat(i,":",p.end-p.start,"\r")
#   return(testW)
# }
# library(RcppDE)
#
# f.SLIM.main<-function(i){
#   p.start<-Sys.time()
#   testW<-DEoptim(
#                f.SLIM,
#                lower=rep(0,4191),upper=rep(c(5,0,5),c(i-1,1,4191-i)),
#                DEoptim.control(trace=F,
#                                storepopfreq = 10,
#                                itermax=10000
#                                ),
#                j=i,A=A)
#   p.end<-Sys.time()
#   # print(i)
#   cat(i,":",p.end-p.start,"\r")
#   return(testW)
# }
library(BB)
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-BBoptim(
par=rep(0,4191),
fn=f.SLIM,
method = "",
lower=rep(0,4191),
upper=rep(c(5,0,5),c(i-1,1,4191-i)),
control=list(
M=1,
maxit=200,
ftol=f.SLIM(rep(0,4191),i,A)/100,
gtol=f.SLIM(rep(0,4191),i,A)/100,
maxfeval=50),
j=i,A=A)
p.end<-Sys.time()
# print(i)
print(paste(i,":",p.end-p.start,"\r"))
return(testW)
}
# f.SLIM.main<-function(i){
#   p.start<-Sys.time()
#   testW<-BBoptim(
#     par=W[,i],
#     fn=f.SLIM,
#     method = "",
#     lower=rep(0,4191),
#     upper=rep(c(5,0,5),c(i-1,1,4191-i)),
#     control=list(
#       M=1,
#       maxit=200,
#       ftol=0.01,
#       gtol=0.01,
#       maxfeval=10000),
#     j=i,A=A)
#   p.end<-Sys.time()
#   # print(i)
#   cat(i,":",p.end-p.start,"\r")
#   return(testW)
# }
norm1<-function(M){
return(sum(abs(M)))
}
norm2<-function(M){
return(sqrt(sum(M^2)))
}
save.image("E:/8sem/thesis/src/slim and nmf.RData")
nmf.temporal.offset50<-nmf(SM.temporal.train,50,method="offset",.opt="vP6")
save.image("E:/8sem/thesis/src/nmf_temporal.RData")
load("E:/8sem/thesis/src/slim and nmf.RData")
load("E:/8sem/thesis/src/SLIM.RData")
dim(SM.Rst.2.test)
dim(SM.Rst.2.train)
SM.Rst.2.train<-as(
select(UR.Rst.2.train,user_id,business_id,stars),
"realRatingMatrix")
library(dplyr)
library(NMF)
library(recommenderlab)
library(optimx)
UR.Rst.2.test<-filter(UR.Rst.2,date>quantile.8.2)
UR.Rst.2.train<-filter(UR.Rst.2,date<=quantile.8.2)
SM.Rst.2.test<-as(
select(UR.Rst.2.test,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.test<-as(SM.Rst.2.test,"dgCMatrix")
SM.Rst.2.train<-as(
select(UR.Rst.2.train,user_id,business_id,stars),
"realRatingMatrix")
SM.Rst.2.train<-as(SM.Rst.2.train,"dgCMatrix")
A<-SM.Rst.2.train
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-BBoptim(
par=rep(0,dim(A)[2]),
fn=f.SLIM,
method = "",
lower=rep(0,dim(A)[2]),
upper=rep(c(5,0,5),c(i-1,1,dim(A)[2]-i)),
control=list(
M=1,
maxit=200,
ftol=f.SLIM(rep(0,dim(A)[2]),i,A)/100,
gtol=f.SLIM(rep(0,dim(A)[2]),i,A)/100,
maxfeval=50),
j=i,A=A)
p.end<-Sys.time()
# print(i)
print(paste(i,":",p.end-p.start,"\r"))
return(testW)
}
library(BB)
SLIM.train.BB<-mapply(f.SLIM.main,4001:dim(A)[2])
SLIM.train.BB<-mapply(f.SLIM.main,1:200)
SLIM.train.BB<-mapply(f.SLIM.main,1:4)
dim(A)
save.image("E:/8sem/thesis/src/0527slim(trian).RData")
SLIM.train.BB<-mapply(f.SLIM.main,1:500)
View(f.SLIM.main)
f.SLIM.main<-function(i){
p.start<-Sys.time()
testW<-BBoptim(
par=rep(0,dim(A)[2]),
fn=f.SLIM,
method = "",
lower=rep(0,dim(A)[2]),
upper=rep(c(5,0,5),c(i-1,1,dim(A)[2]-i)),
control=list(
M=1,
maxit=200,
ftol=f.SLIM(rep(0,dim(A)[2]),i,A)/50,
gtol=f.SLIM(rep(0,dim(A)[2]),i,A)/50,
maxfeval=50),
j=i,A=A)
p.end<-Sys.time()
# print(i)
print(paste(i,":",p.end-p.start,"\r"))
return(testW)
}
SLIM.train.BB<-mapply(f.SLIM.main,1:500)
getwd()
write.csv(mapply(cbind,SLIM.train.BB[1,]),"SLIMTrian_1-500.csv",row.names=T)
View(mapply(cbind,SLIM.train.BB[1,]))
dim(mapply(cbind,SLIM.train.BB[1,]))
SLIM.train.BB[2,]
unlist(SLIM.train.BB[2,])
View(SLIM.train.BB)
write.csv(mapply(cbind,SLIM.train.BB[1,]),"SLIMTrian_1-500.csv",row.names=F)
write.csv(unlist(SLIM.train.BB[2,]),"SLIMTRAIN_fvalue_1-500.csv",row.names = F)
outputname1=paste("SLIMTRAIN_fvalue_",index1,"-",index2,".csv")
outputname2=paste("SLIMTRAIN_",index1,"-",index2,".csv")
index1=1
index2=500
outputname1=paste("SLIMTRAIN_fvalue_",index1,"-",index2,".csv")
outputname2=paste("SLIMTRAIN_",index1,"-",index2,".csv")
write.csv(unlist(SLIM.train.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.BB[1,]),outputname2,row.names=F)
outputname1=paste("SLIMTRAIN_fvalue_",index1,"-",index2,".csv",sep="")
outputname2=paste("SLIMTRAIN_",index1,"-",index2,".csv",sep="")
write.csv(unlist(SLIM.train.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.BB[1,]),outputname2,row.names=F)
summary(UR.Rst.2.train)
UR.Rst.2.train[1,5]
UR.Rst.2.train[1,5]-UR.Rst.2.train[2,5]
as.numeric(UR.Rst.2.train[1,5]-UR.Rst.2.train[2,5])
UR.Rst.2.train<-mutate(UR.Rst.2.train,newstars=0.233*exp(stars)/log(as.numeric(quantile.8.2-date+2.33)))
summary(UR.Rst.2.train)
A<-as(select(UR.Rst.2.train,user_id,business_id,newstars),"realRatingMatrix")
A<-as(A,"dgCMatrix")
UR.Rst.2.train<-mutate(UR.Rst.2.train,newstars=0.233*exp(stars)/log(as.numeric(quantile.8.2-date+2.33)))
as.numeric(UR.Rst.2.train[1,5]-UR.Rst.2.train[2,5])
summary(UR.Rst.2.train)
A<-as(select(UR.Rst.2.train,user_id,business_id,newstars),"realRatingMatrix")
A<-as(A,"dgCMatrix")
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
outputname1=paste("result/model/SLIMT_fvalue_",index1,"-",index2,".csv",sep="")
outputname2=paste("result/model/SLIMT_",index1,"-",index2,".csv",sep="")
write.csv(unlist(SLIM.train.temporal.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.temporal.BB[1,]),outputname2,row.names=F)
index1=4001
index2=4500
library(BB)
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
load("E:/8sem/thesis/src/SLIMT0529.RData")
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
index1=4001
index2=4500
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
index1=4801
index2=4950
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
dim(SLIM.train.temporal.BB)
index1=4001
index2=4500
outputname1=paste("result/model/SLIMT_fvalue_",index1,"-",index2,".csv",sep="")
outputname2=paste("result/model/SLIMT_",index1,"-",index2,".csv",sep="")
write.csv(unlist(SLIM.train.temporal.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.temporal.BB[1,]),outputname2,row.names=F)
index1=4801
index2=4950
SLIM.train.temporal.BB<-mapply(f.SLIM.main,index1:index2)
outputname1=paste("result/model/SLIMT_fvalue_",index1,"-",index2,".csv",sep="")
outputname2=paste("result/model/SLIMT_",index1,"-",index2,".csv",sep="")
write.csv(unlist(SLIM.train.temporal.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.temporal.BB[1,]),outputname2,row.names=F)
library(BB)
library(recommenderlab)
library(dplyr)
A<-as(select(UR.Rst.2.train,user_id,business_id,stars),"realRatingMatrix")
A<-as(A,"dgCMatrix")
SLIM.train.BB<-mapply(f.SLIM.main,1:250)
outputname1=paste("result/model/SLIMTRAIN_fvalue_",index1,"-",index2,".csv",sep="")
outputname2=paste("result/model/SLIMTRAIN_",index1,"-",index2,".csv",sep="")
write.csv(unlist(SLIM.train.BB[2,]),outputname1,row.names = F)
write.csv(mapply(cbind,SLIM.train.BB[1,]),outputname2,row.names=F)
library(ggplot2)
library(data.table)
library(xlsx)
library(dplyr)
library(RColorBrewer)
library(plyr)
library(gridExtra)
library(grid)
library(showtext)
source('E:/git/plot-yelp/5 six dataset main.R')
?pch
point.shapes=c(15:19,8,6)
source('E:/git/plot-yelp/5 six dataset main.R')
